name: Release

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  check-changesets:
    runs-on: ubuntu-latest
    outputs:
      has_changesets: ${{ steps.check.outputs.has_changesets }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for changesets
        id: check
        run: |
          if [ -n "$(ls -A .changeset/*.md 2>/dev/null)" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: check-changesets
    if: needs.check-changesets.outputs.has_changesets == 'true'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.6

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - name: Build packages
        run: pnpm build --filter="@omnisat/*"

      # Dev branch - Create PR and publish prerelease
      - name: Version and Publish Prerelease (dev)
        if: github.ref == 'refs/heads/dev'
        id: changesets-dev
        uses: changesets/action@v1
        with:
          version: pnpm run version
          commit: "chore(release): version packages prerelease"
          title: "chore(release): version packages prerelease"
          publish: pnpm publish -r --tag next --no-git-checks
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Main branch - Create PR and publish stable release
      - name: Version and Publish Stable (main)
        if: github.ref == 'refs/heads/main'
        id: changesets-main
        uses: changesets/action@v1
        with:
          version: pnpm run version
          commit: "chore(release): version packages stable"
          title: "chore(release): version packages stable"
          publish: pnpm publish -r --tag latest --no-git-checks
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
